HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000

if [[ -o interactive ]]; then
  #
  # Paths
  #

  # Ensure path arrays do not contain duplicates.
  typeset -gU cdpath fpath mailpath path

  # Set the list of directories that cd searches.
  cdpath=(
    ..
    ~
    ~/repos
    ~/Repos
  )

  # Set the list of directories that Zsh searches for programs.
  # path=(
  #   /usr/local/{bin,sbin}
  #   $path
  # )

  stty -ixon
fi

setopt alwaystoend
setopt autocd
setopt autopushd
setopt cdablevars
setopt checkjobs
setopt correct
setopt combiningchars
setopt extendedhistory
setopt histexpiredupsfirst
setopt histfindnodups
setopt histignorespace
# This effects duplicates of the previous event only.
# setopt histignoredups
setopt histignorealldups
setopt histsavenodups
setopt histverify
setopt interactivecomments
setopt longlistjobs
setopt pushdignoredups
setopt sharehistory
unsetopt caseglob
unsetopt clobber
unsetopt flowcontrol
unsetopt hup
unsetopt nomatch
unsetopt promptsp

# http://zsh.sourceforge.net/FAQ/zshfaq04.html
# (These are on by default)
# setopt autolist
# setopt automenu
# unsetopt menucomplete

bindkey -e

autoload -Uz compinit
compinit -C

zstyle ':completion:*' verbose yes
# Ignore _expand if bind expand-or-complete (see: man zshcompsys)
# zstyle ':completion:*' completer _expand _complete _match _prefix _approximate _list _history
zstyle ':completion:*' completer _complete _match _prefix _approximate _list
zstyle ':completion:*:default' menu select
# zstyle ':completion:*' menu select interactive
# https://qiita.com/watertight/items/2454f3e9e43ef647eb6b
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' '+m:{[:upper:]}={[:lower:]}'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:matches' group yes
zstyle ':completion:*' group-name ''
# Prevent expantion prefix like ~ when path completion
zstyle ':completion:*' keep-prefix

# TODO: Check autosuggestions module: autosuggestions/README.md
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "^u" backward-kill-line
bindkey "^[[Z" reverse-menu-complete

autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic
zstyle :bracketed-paste-magic paste-init backward-extend-paste

# Ignore rm command in history
# http://mollifier.hatenablog.com/entry/20090728/p1
zshaddhistory() {
  local line=${1%%$'\n'}
  local cmd=${line%% *}

  [[ ${cmd} != rm ]]
  # [[ # ${#line} -ge 5
  # && ${cmd} != (l|l[sal])
  # && ${cmd} != (c|cd)
  # && ${cmd} != (m|man)
  # ]]
}

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
# NOTE: lesspipe.sh can't load in zprofile so fail to existing check.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
  export LESS_ADVANCED_PREPROCESSOR=1
fi

alias rm="rm -i"
alias ll="ls -hl"
alias la="ls -ahl"

if [ "$(uname)" == 'Darwin' -a ! -x gls ]; then
  # BSD ls
  alias ls="ls -G"
  export LSCOLORS=exfxcxdxbxGxDxabagacad
  zstyle ':completion:*:default' list-colors ${(s.:.)LSCOLORS}
else
  if [ -x gls ]; then
    # coreutils gls
    alias ls="gls --color=auto"
  else
    # GNU ls
    alias ls="ls --color=auto"
  fi
  # https://github.com/Microsoft/vscode/issues/7556
  # export LS_COLORS="ow=01;36;40"
  # Or, below changes to orange but forgot source page
  # export LS_COLORS=$LS_COLORS"ow=00;33:"
  export LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=01;36:"
  zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
fi


# "forget" command to remove the last command
# https://unix.stackexchange.com/a/539771
# setopt histignorespace

alias forget=' my_remove_last_history_entry' # Added a space in 'my_remove_last_history_entry' so that zsh forgets the 'forget' command :).

# ZSH's history is different from bash,
# so here's my fucntion to remove
# the last item from history.
my_remove_last_history_entry() {
    # This sub-function checks if the argument passed is a number.
    # Thanks to @yabt on stackoverflow for this :).
    is_int() ( return $(test "$@" -eq "$@" > /dev/null 2>&1); )

    # Set history file's location
    history_file="${HISTFILE}"
    history_temp_file="${history_file}.tmp"
    line_cout=$(wc -l $history_file)

    # Check if the user passed a number,
    # so we can delete x lines from history.
    lines_to_remove=1
    if [ $# -eq 0 ]; then
        # No arguments supplied, so set to one.
        lines_to_remove=1
    else
        # An argument passed. Check if it's a number.
        if $(is_int "${1}"); then
            lines_to_remove="$1"
        else
            echo "Unknown argument passed. Exiting..."
            return
        fi
    fi

    # Make the number negative, since head -n needs to be negative.
    lines_to_remove="-${lines_to_remove}"

    fc -W # write current shell's history to the history file.

    # Get the files contents minus the last entry(head -n -1 does that)
    #cat $history_file | head -n -1 &> $history_temp_file
    cat $history_file | head -n "${lines_to_remove}" &> $history_temp_file
    mv "$history_temp_file" "$history_file"

    fc -R # read history file.
}

# Load plugins
source ${0:a:h}/zplugin
